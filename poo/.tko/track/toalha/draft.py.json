{
    "patches": [
        {
            "label": "2025-09-16_19-37-40",
            "content": "@@ -1,29 +0,0 @@\n-print(%22minha toalha %C3%A9 rosa.%22)\n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_19-39-22",
            "content": "@@ -23,31 +23,7 @@\n rosa\n-%22)%0Aprint(%22e tem meu nome\n .%22)\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-03-48",
            "content": "@@ -21,8 +21,33 @@\n %C3%A9 rosa%22)\n+%0Aprint(%22e tem meu nome.%22)\n",
            "lines": "2"
        },
        {
            "label": "2025-09-16_20-03-58",
            "content": "@@ -1,234 +1,28 @@\n-class Towel:%0A    def __init__(self):%0A        self.color = %22red%22%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0Atoalha = Towel()%0Aprint(toalha.color)%0Atoalha.color = %22white%22%0Aprint(toalha.color)%0Aprint(toalha.size)%0Aprint(toalha.wetness\n+print(%22minha toalha %C3%A9 rosa%22\n )\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-10-13",
            "content": "@@ -31,45 +31,10 @@\n self\n-, color: str, size: str): #construtor\n+):\n %0A   \n@@ -60,19 +60,8 @@\n red%22\n- #atributos\n %0A   \n@@ -111,95 +111,23 @@\n  0%0A%0A\n-#variavel ou referencia%0Atoalha = Towel(%22green%22, %22g%22) #objetos%0Atoalha = Towel(%22red%22, %22p%22\n+toalha = Towel(\n )%0Apr\n",
            "lines": "12"
        },
        {
            "label": "2025-09-16_20-19-08",
            "content": "@@ -157,108 +157,8 @@\n  0%0A%0A\n-    def __str__(self) :%0A        return f%22color: %7Bself.color%7D, tam:%7Bself.size%7D, umi:%7Bself.wetness%7D%22%0A%0A\n #var\n@@ -246,23 +246,8 @@\n p%22)%0A\n-outra = toalha%0A\n prin\n@@ -262,16 +262,16 @@\n .color)%0A\n+\n toalha.c\n@@ -289,29 +289,8 @@\n te%22%0A\n-outra.color = %22blue%22%0A\n prin\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-21-46",
            "content": "@@ -1,11 +1,8 @@\n-%0A%0A%0A\n class To\n@@ -68,63 +68,8 @@\n utor\n-: padrao para definir que aquele metodo eh o construtor\n %0A   \n@@ -151,13 +151,8 @@\n ness\n-: int\n  = 0\n@@ -165,515 +165,23 @@\n def \n-dry(self, amount:int) -%3E None:  #amount: quantidade de agua%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) :  #transforma em texto, equivalente ao %22toString%22\n+__str__(self) :\n %0A   \n@@ -239,12 +239,8 @@\n  umi\n-dade\n :%7Bse\n@@ -255,104 +255,33 @@\n ss%7D%22\n-  #return: devolve para quem solicitou%0A%0A#variavel ou referencia%0Aminha: Towel = Towel(%22red%22, %22M%22)\n+%0A%0A#variavel ou referencia\n %0Atoa\n@@ -485,171 +485,4 @@\n ess)\n-%0A%0Adoguito = Towel(%22velha%22, %22M%22)%0Aprint(doguito)%0Adoguito.dry(3)%0Aprint(doguito)%0Adoguito.dry(15)%0Adoguito.dry(10)%0Aprint(doguito)%0A%0A%0A%0A#https://classroom.github.com/a/G161n2yI\n",
            "lines": "19"
        },
        {
            "label": "2025-09-22_16-11-31",
            "content": "@@ -1,16 +1,68 @@\n-class To\n+@@ -1,8 +1,11 @@%0A+%250A%250A%250A%0A class To%0A@@ -12,17 +12,8 @@%0A \n wel:\n+%0A-\n     \n@@ -72,86 +72,189 @@\n is%0A \n-   def __init__(self, color: str, size: str): # constructor%0A        self.c\n+%250A   %0A@@ -61,16 +61,70 @@%0A ): #%0A+construtor: padrao para definir que aquele metodo eh o%0A  constru%0A ctor%0A@@ -119,17 +119,16 @@%0A  constru%0A-c%0A tor%250A    %0A@@ -145,24 +145,18 @@%0A \n olor\n+%0A-\n : st\n@@ -266,38 +266,65 @@\n olor\n- # atributos%0A        self.\n+%0A+ = %2522red%2522%0A  #%0A- %0A atri%0A@@ -182,20 +182,14 @@%0A \n size\n+%0A-\n : st\n@@ -336,247 +336,201 @@\n ize%0A\n-        self.wetness: int = 0%0A%0A    def dry(self, amou\n++ = %2522p%2522%0A %250A   %0A@@ -241,17 +241,16 @@%0A  amount:%0A- %0A int) -%253E %0A@@ -246,32 +246,61 @@%0A \n nt:\n- \n int) -\n-%3E\n+%253E\n  None:%0A\n-        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A\n++  #amount: quantidade de agua%0A %250A        self.we%0A@@ -456,133 +456,8 @@%0A ()%250A%250A%0A-\n     \n@@ -550,16 +550,20 @@\n f) -\n-%3E\n+%253E\n  bool:\n-%0A\n+%250A\n     \n@@ -590,22 +590,26 @@\n ess == 0\n-%0A\n+%250A\n     \n-%0A\n+%250A\n     def \n@@ -628,16 +628,20 @@\n f) -\n-%3E\n+%253E\n  None:\n-%0A\n+%250A\n     \n@@ -664,394 +664,592 @@\n  = 0\n-%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: # toString%0A    \n+%250A%250A%0A     %0A@@ -685,26 +685,57 @@%0A lf) %0A--%253E str: # %0A+:  #transforma em texto, equivalente ao %2522%0A toString%0A %250A   %0A@@ -730,16 +730,17 @@%0A toString%0A+%2522%0A %250A       %0A@@ -753,12 +753,15 @@%0A n f%2522%0A-C%0A+col%0A or:%0A+ %0A %257Bsel%0A@@ -770,17 +770,17 @@%0A color%257D, %0A-T%0A+t%0A am:%257Bself%0A@@ -791,9 +791,9 @@%0A e%257D, %0A-U%0A+u%0A mida%0A@@ -814,35 +814,105 @@%0A ss%257D%2522%0A-%250A%0A   %0A-  %250A%250Adef main(): #2.%250A\n     \n+%0A+#\n return\n- f%22Cor:%7Bself.color%7D, Tam:%7Bself.size%7D, Umidade:%7Bself.wetness%7D%22%0A    %0A%0Adef main(): #2.%0A    toalha = Towel(%22%22, %22%22)  #3.\n+: devolve para quem solicitou%250A%250A#variavel ou referencia%250Aminha: Towel = Towel(%2522red%2522, %2522M%2522)%250A%0A toal%0A@@ -927,586 +927,359 @@%0A el(%2522%0A+green%0A %2522, %2522%0A+g%0A %2522) %0A- #3. %0A+#%0A\n  objeto\n+%0A-\n  man\n@@ -1255,17 +1255,19 @@\n nipulado\n-%0A\n+%250A\n     whil\n@@ -1291,17 +1291,19 @@\n infinito\n-%0A\n+%250A\n         \n@@ -1309,21 +1309,75 @@\n  line: s\n-tr\n+%0A+s%250Atoalha = Towel(%2522red%2522, %2522p%2522)%250Aou%0A tr%0A+a%0A \n  = \n+%0A-\n input() \n@@ -1396,17 +1396,19 @@\n de linha\n-%0A\n+%250A\n         \n@@ -1421,13 +1421,17 @@\n list\n-%5Bstr%5D\n+%255Bstr%255D\n  = l\n@@ -1444,11 +1444,15 @@\n lit(\n-%22 %22\n+%2522 %2522\n ) #6\n@@ -1469,17 +1469,19 @@\n  palavra\n-%0A\n+%250A\n         \n@@ -1491,20 +1491,28 @@\n args\n-%5B0%5D == %22end%22\n+%255B0%255D == %2522end%2522\n : #f\n@@ -1526,12 +1526,19 @@\n xecu\n-%C3%A7ao%0A\n+%25C3%25A7ao%250A\n     \n@@ -1550,17 +1550,19 @@\n    break\n-%0A\n+%250A\n         \n@@ -1574,22 +1574,32 @@\n args\n-%5B0%5D == %22new%22:%0A\n+%255B0%255D == %2522new%2522:%250A\n     \n@@ -1622,12 +1622,18 @@\n args\n-%5B1%5D%0A\n+%255B1%255D%250A\n     \n@@ -1655,12 +1655,18 @@\n args\n-%5B2%5D%0A\n+%255B2%255D%250A\n     \n@@ -1700,17 +1700,19 @@\n r, size)\n-%0A\n+%250A\n         \n@@ -1724,23 +1724,33 @@\n args\n-%5B0%5D\n+%255B0%255D\n  == \n-%22\n+%2522\n show\n-%22:%0A\n+%2522:%250A\n     \n@@ -1770,17 +1770,19 @@\n (toalha)\n-%0A\n+%250A\n         \n@@ -1794,22 +1794,32 @@\n args\n-%5B0%5D == %22dry%22:%0A\n+%255B0%255D == %2522dry%2522:%250A\n     \n@@ -1852,13 +1852,19 @@\n args\n-%5B1%5D)%0A\n+%255B1%255D)%250A\n     \n@@ -1889,17 +1889,19 @@\n (amount)\n-%0A\n+%250A\n         \n@@ -1905,17 +1905,19 @@\n    else:\n-%0A\n+%250A\n         \n@@ -1926,17 +1926,19 @@\n   print(\n-%22\n+%2522\n fail: co\n@@ -1955,6 +1955,361 @@\n lido\n-%22)\n+%2522)%0A+toalha%250Aprint(toalha.color)%250Atoalha.color = %2522white%2522%250Aoutra.color = %2522blue%2522%250Aprint(toalha.color)%250Aprint(toalha.size)%250Aprint(toalha.wetness)%250A%250Adoguito = Towel(%2522velha%2522, %2522M%2522)%250Aprint(doguito)%250Adoguito.dry(3)%250Aprint(doguito)%250Adoguito.dry(15)%250Adoguito.dry(10)%250Aprint(doguito)%250A%250A%250A%250A#https://classroom.github.com/a/G161n2yI%0A\n",
            "lines": "90"
        },
        {
            "label": "2025-09-22_16-50-06",
            "content": "@@ -1154,20 +1154,8 @@\n ew%22:\n- #color size\n %0A   \n@@ -1338,17 +1338,9 @@\n ry%22:\n- #amount\n %0A\n+\n     \n@@ -1422,35 +1422,8 @@\n lse:\n- #7. comando nao encontrado\n %0A   \n@@ -1466,12 +1466,4 @@\n do%22)\n-%0A%0Amain()\n",
            "lines": "49"
        },
        {
            "label": "2025-09-22_16-54-01",
            "content": "class Towel:    #this\n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: # toString\n        return f\"Cor:{self.color}, Tam:{self.size}, Umidade:{self.wetness}\"\n    \n\ndef main(): #2.\n    toalha = Towel(\"\", \"\")  #3. objeto manipulado\n    while True: #4. loop infinito\n        line: str = input() #5. entrada de linha\n        args: list[str] = line.split(\" \") #6. lista de palavra\n        if args[0] == \"end\": #fim da execu\u00e7ao\n            break\n        elif args[0] == \"new\": #color size\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0] == \"dry\": #amount\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else: #7. comando nao encontrado\n            print(\"fail: comando invalido\")\n\nmain()",
            "lines": "51"
        }
    ]
}