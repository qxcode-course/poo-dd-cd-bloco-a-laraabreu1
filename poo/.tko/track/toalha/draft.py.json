{
    "patches": [
        {
            "label": "2025-09-16_19-37-40",
            "content": "@@ -1,29 +0,0 @@\n-print(%22minha toalha %C3%A9 rosa.%22)\n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_19-39-22",
            "content": "@@ -23,31 +23,7 @@\n rosa\n-%22)%0Aprint(%22e tem meu nome\n .%22)\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-03-48",
            "content": "@@ -21,8 +21,33 @@\n %C3%A9 rosa%22)\n+%0Aprint(%22e tem meu nome.%22)\n",
            "lines": "2"
        },
        {
            "label": "2025-09-16_20-03-58",
            "content": "@@ -1,234 +1,28 @@\n-class Towel:%0A    def __init__(self):%0A        self.color = %22red%22%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0Atoalha = Towel()%0Aprint(toalha.color)%0Atoalha.color = %22white%22%0Aprint(toalha.color)%0Aprint(toalha.size)%0Aprint(toalha.wetness\n+print(%22minha toalha %C3%A9 rosa%22\n )\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-10-13",
            "content": "@@ -31,45 +31,10 @@\n self\n-, color: str, size: str): #construtor\n+):\n %0A   \n@@ -60,19 +60,8 @@\n red%22\n- #atributos\n %0A   \n@@ -111,95 +111,23 @@\n  0%0A%0A\n-#variavel ou referencia%0Atoalha = Towel(%22green%22, %22g%22) #objetos%0Atoalha = Towel(%22red%22, %22p%22\n+toalha = Towel(\n )%0Apr\n",
            "lines": "12"
        },
        {
            "label": "2025-09-16_20-19-08",
            "content": "@@ -157,108 +157,8 @@\n  0%0A%0A\n-    def __str__(self) :%0A        return f%22color: %7Bself.color%7D, tam:%7Bself.size%7D, umi:%7Bself.wetness%7D%22%0A%0A\n #var\n@@ -246,23 +246,8 @@\n p%22)%0A\n-outra = toalha%0A\n prin\n@@ -262,16 +262,16 @@\n .color)%0A\n+\n toalha.c\n@@ -289,29 +289,8 @@\n te%22%0A\n-outra.color = %22blue%22%0A\n prin\n",
            "lines": "14"
        },
        {
            "label": "2025-09-16_20-21-46",
            "content": "@@ -1,11 +1,8 @@\n-%0A%0A%0A\n class To\n@@ -68,63 +68,8 @@\n utor\n-: padrao para definir que aquele metodo eh o construtor\n %0A   \n@@ -151,13 +151,8 @@\n ness\n-: int\n  = 0\n@@ -165,515 +165,23 @@\n def \n-dry(self, amount:int) -%3E None:  #amount: quantidade de agua%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) :  #transforma em texto, equivalente ao %22toString%22\n+__str__(self) :\n %0A   \n@@ -239,12 +239,8 @@\n  umi\n-dade\n :%7Bse\n@@ -255,104 +255,33 @@\n ss%7D%22\n-  #return: devolve para quem solicitou%0A%0A#variavel ou referencia%0Aminha: Towel = Towel(%22red%22, %22M%22)\n+%0A%0A#variavel ou referencia\n %0Atoa\n@@ -485,171 +485,4 @@\n ess)\n-%0A%0Adoguito = Towel(%22velha%22, %22M%22)%0Aprint(doguito)%0Adoguito.dry(3)%0Aprint(doguito)%0Adoguito.dry(15)%0Adoguito.dry(10)%0Aprint(doguito)%0A%0A%0A%0A#https://classroom.github.com/a/G161n2yI\n",
            "lines": "19"
        },
        {
            "label": "2025-09-22_16-11-31",
            "content": "\n\n\nclass Towel:\n    def __init__(self, color: str, size: str): #construtor: padrao para definir que aquele metodo eh o construtor\n        self.color = \"red\" #atributos\n        self.size = \"p\"\n        self.wetness: int = 0\n\n    def dry(self, amount:int) -> None:  #amount: quantidade de agua\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) :  #transforma em texto, equivalente ao \"toString\"\n        return f\"color: {self.color}, tam:{self.size}, umidade:{self.wetness}\"  #return: devolve para quem solicitou\n\n#variavel ou referencia\nminha: Towel = Towel(\"red\", \"M\")\ntoalha = Towel(\"green\", \"g\") #objetos\ntoalha = Towel(\"red\", \"p\")\noutra = toalha\nprint(toalha.color)\ntoalha.color = \"white\"\noutra.color = \"blue\"\nprint(toalha.color)\nprint(toalha.size)\nprint(toalha.wetness)\n\ndoguito = Towel(\"velha\", \"M\")\nprint(doguito)\ndoguito.dry(3)\nprint(doguito)\ndoguito.dry(15)\ndoguito.dry(10)\nprint(doguito)\n\n\n\n#https://classroom.github.com/a/G161n2yI",
            "lines": "50"
        }
    ]
}